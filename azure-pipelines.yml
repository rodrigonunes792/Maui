trigger:
- main

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  # Defina o caminho correto para sua solução
  solutionPath: '**/*.sln'  # Busca por qualquer arquivo .sln
  # Ou use o caminho específico se souber onde está:
  # solutionPath: 'Contagem_V1/Contagem.sln'

steps:
# Primeiro, vamos listar os arquivos para debug
- task: PowerShell@2
  displayName: 'List files for debugging'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Listing files in repository root:"
      Get-ChildItem -Recurse -Name "*.sln" | ForEach-Object { Write-Host $_ }
      Write-Host "Current directory contents:"
      Get-ChildItem -Recurse | Where-Object { $_.Name -like "*.sln" -or $_.Name -like "*.csproj" } | Select-Object FullName

- task: UseDotNet@2
  displayName: 'Use .NET SDK 8.0.x'  # Atualizado para .NET 8
  inputs:
    version: '8.0.x'
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  displayName: 'Install MAUI Workload'
  inputs:
    command: 'custom'
    custom: 'workload'
    arguments: 'install maui'

- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '$(solutionPath)'
    # Adicione verbosidade para debug
    arguments: '--verbosity normal'

- task: DotNetCoreCLI@2
  displayName: 'Build Android APK'
  inputs:
    command: 'publish'  # Mudado de 'build' para 'publish'
    projects: '**/SoftwareShow.Contagem.MApp.csproj'  # Padrão de busca
    arguments: '-c $(buildConfiguration) -f net8.0-android --no-restore /p:ApplicationDisplayVersion=1.0 /p:ApplicationVersion=1 /p:AndroidPackageFormat=apk /p:EmbedAssembliesIntoApk=true /p:PublishTrimmed=false'
    publishWebProjects: false
    zipAfterPublish: false

# Tarefa alternativa para encontrar e copiar o APK
- task: CopyFiles@2
  displayName: 'Copy APK to staging directory'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish APK artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'android-apk'
    publishLocation: 'Container'